# -*- coding: utf-8 -*-
"""Web_mapping.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1rF25DQP0b0E7oQNHYz5ThZaPYkBZjybH
"""

#Importing libraries
import folium                                                                   # library used to build web maps
import pandas                                                                   # library to read csv files         

#Reading the CSV file
df = pandas.read_csv("Volcanoes.csv")

#Creating the Map
map = folium.Map(location=[80,-90] , zoom_start=4 , tiles="OpenStreetMap")      #Creating the object of Map class

def color_producer(elevation):                                                  #Defining the fuction to display the color of volcanoes based on their elevation
  if elevation < 1000:
    return 'green'
  elif 1000 <= elevation <3000:
    return 'orange'
  else:
    return 'red'

fg1 = folium.FeatureGroup(name="Volcanoes")                                     #Creating the first feature group of volcano locations
for coordinates,el in zip(df[['LAT','LON']].values , list(df['ELEV'])):         #creating the circlemarkers for each loaction
  fg1.add_child(folium.CircleMarker(location=coordinates ,
                                   popup=str(el)+" m" ,
                                   color="black",
                                   weight=1,
                                   fill=True,
                                   fill_color=color_producer(el),
                                   fill_opacity=1.0,
                                   radius=6.0
  ))

fg2 = folium.FeatureGroup(name="Population layer")                              #Creating the second layer to distinguish countries on the basis of their population 
fg2.add_child(folium.GeoJson(data=open("world.json",'r',encoding='utf-8-sig').read(),#Reading the json file
                            style_function = lambda x : {'fillColor':'green' if x['properties']['POP2005'] < 10000000 
                                                         else 'orange' if 10000000 <= x['properties']['POP2005'] < 20000000
                                                         else 'red'
                                                         }                      #defining colors for a different ranges of population
                            ))
map.add_child(fg2)                                                              #Adding feature groups to the map
map.add_child(fg1)

map.add_child(folium.LayerControl())                                            #Adding layer control feature to the map

map.save("Volcano_and_population_map.html")